spring.jpa.show-sql=true

spring.datasource.hikari.jdbc-url=jdbc:h2:mem://localhost/~/test;MODE=MYSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.storage_engine=innodb

# OAuth
# registration
spring.security.oauth2.client.registration.naver.client-id=nkfuseaEqUTKgtxCgGP0
spring.security.oauth2.client.registration.naver.client-secret=lLljIoQLHE
########### Spring이 아는 세계적인 sns면 여기까지만 작성해도 되고, 네이버는 그 정도는 아니라 따로 설정 필요(밑에)
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# naver에서는 response라는 계층을 나누기 때문에, 정보를 가져오기 위해 user-name-attribute를 response로 지정해주고 별도의 클래스를 만들어서 필요한 정보를 빼오는 절차가 필요함.
spring.security.oauth2.client.provider.naver.user-name-attribute=response